curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally() %>%
filter(question %in% c("env_CattleExposure", "env_HabitationType"))
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
theme(legend.position="bottom",
text = element_text(size=10))
plotcat + facet_wrap(question ~ ., ncol=5, scales = "free_x")
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
theme(legend.position="bottom",
text = element_text(size=10))
plotcat + facet_wrap(question ~ ., ncol=5, scales = "free_x")
# Load the spreadsheets and add columns
Q1 <- read_excel("../normalized_versions/translated/Q1_norm_background_04.10.18.xlsx")
## add age in days and weeks
Q1_corr <- Q1 %>% mutate(inf_AgeDays=0) %>%
mutate(inf_AgeWeeks=floor(inf_AgeDays/7)) %>% mutate(inf_Age="birth")
## corrects dates
Q1_corr <- Q1_corr %>% mutate(q_ResponseDate = as.Date(q_ResponseDate, format = "%d.%m.%Y")) %>%
mutate(inf_DOB = as.Date(inf_DOB, format = "%d.%m.%Y")) %>%
mutate(inf_DueDate = as.Date(inf_DueDate, format = "%d.%m.%Y"))
## correct the Postal code
Q1_corr <- Q1_corr %>% mutate(env_PostalCode=str_pad(env_PostalCode, 5, pad = "0")) %>%
mutate(env_PrevResidencePostalCode=str_pad(env_PrevResidencePostalCode, 5, pad = "0"))
## check for duplicated submissions
Q1_dup_fam <- Q1_corr %>% select(familly_ID) %>% group_by(familly_ID) %>%
tally() %>% ungroup() %>% filter(n>1)
Q1_dup <- left_join(Q1_dup_fam, Q1_corr)
## export as csv
write_csv(Q1_corr, "../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv")
# libraries
library("readxl")
library("tidyverse")
library("ggridges")
# Load the spreadsheets
Voc <- read_excel("../questionnaire_vocabulary.xlsx")
Q1 <- read_csv("../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv") %>%
add_column(questionnaire="A_background")
Q2 <- read_csv("../normalized_versions/corrected_translated/Q2_norm_Previous3months_15.08.20.csv") %>%
add_column(questionnaire="E_Previous3Months")
Q3 <- read_csv("../normalized_versions/corrected_translated/Q3_norm_4to6months_26.01.20.csv") %>%
add_column(questionnaire="C_4to6months")
Q4 <- read_csv("../normalized_versions/corrected_translated/Q4_norm_7to12months_27.01.21.csv") %>%
add_column(questionnaire="D_7to12months")
Q5y1 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearI_28.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version2")
Q5y2 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version2")
Q5y1B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearI_27.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version1")
Q5y2B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version1")
Q6F <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsF_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentF_FoodFrequency")
Q6M <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsM_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentM_FoodFrequency")
Q7 <- read_csv("../normalized_versions/corrected_translated/Q7_norm_depression_unkown.csv") %>%
add_column(questionnaire="G_MotherDepression")
Q8 <- read_csv("../normalized_versions/corrected_translated/Q8_norm_HouseDustCollection_28.01.21.csv") %>%
add_column(questionnaire="H_HouseCollection")
Q9 <- read_csv("../normalized_versions/corrected_translated/Q9_norm_0to3 months_02.02.2020.csv") %>%
add_column(questionnaire="B_0to3months")
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
bool_fields <- curr_Voc %>% filter(data_type=="bool") %>% pull(variable_short_name)
curr_bool <- Q1 %>% select(familly_ID, all_of(bool_fields))
curr_bool_long <- curr_bool %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_bool_counts <- curr_bool_long %>% group_by(question, answers) %>% tally()
plotbools <- curr_bool_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotbools
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
theme(legend.position="bottom",
text = element_text(size=10))
plotcat + facet_wrap(question ~ ., ncol=5, scales = "free_x")
View(curr_Voc)
View(curr_cat_counts)
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D")
pull(variable_short_name)
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
theme(legend.position="bottom",
text = element_text(size=10))
plotcat + facet_wrap(question ~ ., ncol=5, scales = "free_x")
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
theme(legend.position="bottom",
text = element_text(size=10))
plotcat + facet_wrap(question ~ ., ncol=5, scales = "free_x")
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
View(curr_Voc)
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(familly_ID, all_of(int_fields))
#curr_int_long <- curr_int %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
View(curr_int)
# libraries
library("readxl")
library("tidyverse")
library("ggridges")
# Load the spreadsheets
Voc <- read_excel("../questionnaire_vocabulary.xlsx")
Q1 <- read_csv("../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv") %>%
add_column(questionnaire="A_background")
Q2 <- read_csv("../normalized_versions/corrected_translated/Q2_norm_Previous3months_15.08.20.csv") %>%
add_column(questionnaire="E_Previous3Months")
Q3 <- read_csv("../normalized_versions/corrected_translated/Q3_norm_4to6months_26.01.20.csv") %>%
add_column(questionnaire="C_4to6months")
Q4 <- read_csv("../normalized_versions/corrected_translated/Q4_norm_7to12months_27.01.21.csv") %>%
add_column(questionnaire="D_7to12months")
Q5y1 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearI_28.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version2")
Q5y2 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version2")
Q5y1B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearI_27.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version1")
Q5y2B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version1")
Q6F <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsF_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentF_FoodFrequency")
Q6M <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsM_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentM_FoodFrequency")
Q7 <- read_csv("../normalized_versions/corrected_translated/Q7_norm_depression_unkown.csv") %>%
add_column(questionnaire="G_MotherDepression")
Q8 <- read_csv("../normalized_versions/corrected_translated/Q8_norm_HouseDustCollection_28.01.21.csv") %>%
add_column(questionnaire="H_HouseCollection")
Q9 <- read_csv("../normalized_versions/corrected_translated/Q9_norm_0to3 months_02.02.2020.csv") %>%
add_column(questionnaire="B_0to3months")
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(familly_ID, all_of(int_fields))
#curr_int_long <- curr_int %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
View(curr_int)
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(familly_ID, all_of(int_fields))
#curr_int_long <- curr_int %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(variable_short_name != "env_PostalCode") %>%
filter(variable_short_name != "env_PrevResidencePostalCode") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(familly_ID, all_of(int_fields))
#curr_int_long <- curr_int %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
View(curr_int)
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(variable_short_name != "env_PostalCode") %>%
filter(variable_short_name != "env_PrevResidencePostalCode") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(all_of(int_fields))
#curr_int_long <- curr_int %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
ggplot(gather(curr_int), aes(value)) +
geom_histogram(bins = 10) +
facet_wrap(~key, scales = 'free_x')
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(variable_short_name != "env_PostalCode") %>%
filter(variable_short_name != "env_PrevResidencePostalCode") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(all_of(int_fields))
#curr_int_long <- curr_int %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free_x')
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(variable_short_name != "env_PostalCode") %>%
filter(variable_short_name != "env_PrevResidencePostalCode") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(all_of(int_fields))
#curr_int_long <- curr_int %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at boolean fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(variable_short_name != "env_PostalCode") %>%
filter(variable_short_name != "env_PrevResidencePostalCode") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(all_of(int_fields))
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
type_check <-  curr_int %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
View(type_check)
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(variable_short_name != "env_PostalCode") %>%
filter(variable_short_name != "env_PrevResidencePostalCode") %>%
pull(variable_short_name) %>%
filter(usability!="EMPTY") %>%
curr_int <- Q1 %>% select(all_of(int_fields))
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(variable_short_name != "env_PostalCode") %>%
filter(variable_short_name != "env_PrevResidencePostalCode") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(all_of(int_fields))
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
# checking type of data
type_check <-  curr_int %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
View(curr_int)
View(Q1)
Q1$`m_PregnancyDurationW+D`
view <- Q1$`m_PregnancyDurationW+D`
view <- Q1 %>% select(familly_ID, m_PregnancyDurationW+D, m_PregnancyDurationD)
view <- Q1 %>% select(familly_ID, `m_PregnancyDurationW+D`, m_PregnancyDurationD)
View(view)
# Load the spreadsheets and add columns
Q1 <- read_excel("../normalized_versions/translated/Q1_norm_background_04.10.18.xlsx")
## add age in days and weeks
Q1_corr <- Q1 %>% mutate(inf_AgeDays=0) %>%
mutate(inf_AgeWeeks=floor(inf_AgeDays/7)) %>% mutate(inf_Age="birth")
## corrects dates
Q1_corr <- Q1_corr %>% mutate(q_ResponseDate = as.Date(q_ResponseDate, format = "%d.%m.%Y")) %>%
mutate(inf_DOB = as.Date(inf_DOB, format = "%d.%m.%Y")) %>%
mutate(inf_DueDate = as.Date(inf_DueDate, format = "%d.%m.%Y"))
View(Q1_corr)
## Correct Pregnancy duration
Q1_corr <- Q1_corr %>% separate('m_PregnancyDurationW+D', into = c("weeksPreg", "DaysPreg"), sep="+",
remove=FALSE)
## Correct Pregnancy duration
Q1_corr <- Q1_corr %>% separate('m_PregnancyDurationW+D', into = c("weeksPreg", "DaysPreg"), sep="\+",
remove=FALSE)
## Correct Pregnancy duration
Q1_corr <- Q1_corr %>% separate('m_PregnancyDurationW+D', into = c("weeksPreg", "DaysPreg"), sep="\\+",
remove=FALSE)
# Load the spreadsheets and add columns
Q1 <- read_excel("../normalized_versions/translated/Q1_norm_background_04.10.18.xlsx")
## add age in days and weeks
Q1_corr <- Q1 %>% mutate(inf_AgeDays=0) %>%
mutate(inf_AgeWeeks=floor(inf_AgeDays/7)) %>%
mutate(inf_Age="birth") %>%
relocate(inf_AgeDays, .after = inf_Age) %>%
relocate(inf_AgeWeeks, .after = inf_AgeDays)
## corrects dates
Q1_corr <- Q1_corr %>% mutate(q_ResponseDate = as.Date(q_ResponseDate, format = "%d.%m.%Y")) %>%
mutate(inf_DOB = as.Date(inf_DOB, format = "%d.%m.%Y")) %>%
mutate(inf_DueDate = as.Date(inf_DueDate, format = "%d.%m.%Y"))
## Correct Pregnancy duration
Q1_corr <- Q1_corr %>% separate('m_PregnancyDurationW+D', into = c("weeksPreg", "DaysPreg"), sep="\\+",
remove=FALSE) %>%
mutate(m_PregnancyDurationD=(as.numeric(weeksPreg)*7)+as.numeric(DaysPreg)) %>%
relocate(m_PregnancyDurationD, .after = 'm_PregnancyDurationW+D')
## correct the Postal code
Q1_corr <- Q1_corr %>% mutate(env_PostalCode=str_pad(env_PostalCode, 5, pad = "0")) %>%
mutate(env_PrevResidencePostalCode=str_pad(env_PrevResidencePostalCode, 5, pad = "0"))
# Load the spreadsheets and add columns
Q1 <- read_excel("../normalized_versions/translated/Q1_norm_background_04.10.18.xlsx")
## add age in days and weeks
Q1_corr <- Q1 %>% mutate(inf_AgeDays=0) %>%
mutate(inf_AgeWeeks=floor(inf_AgeDays/7)) %>%
mutate(inf_Age="birth") %>%
relocate(inf_AgeDays, .after = inf_Age) %>%
relocate(inf_AgeWeeks, .after = inf_AgeDays)
## corrects dates
Q1_corr <- Q1_corr %>% mutate(q_ResponseDate = as.Date(q_ResponseDate, format = "%d.%m.%Y")) %>%
mutate(inf_DOB = as.Date(inf_DOB, format = "%d.%m.%Y")) %>%
mutate(inf_DueDate = as.Date(inf_DueDate, format = "%d.%m.%Y"))
## Correct Pregnancy duration
Q1_corr <- Q1_corr %>% separate('m_PregnancyDurationW+D', into = c("weeksPreg", "DaysPreg"), sep="\\+",
remove=FALSE) %>%
mutate(m_PregnancyDurationD=(as.numeric(weeksPreg)*7)+as.numeric(DaysPreg)) %>%
select(-weeksPreg, -DaysPreg) %>%
relocate(m_PregnancyDurationD, .after = 'm_PregnancyDurationW+D')
## correct the Postal code
Q1_corr <- Q1_corr %>% mutate(env_PostalCode=str_pad(env_PostalCode, 5, pad = "0")) %>%
mutate(env_PrevResidencePostalCode=str_pad(env_PrevResidencePostalCode, 5, pad = "0"))
## check for duplicated submissions
Q1_dup_fam <- Q1_corr %>% select(familly_ID) %>% group_by(familly_ID) %>%
tally() %>% ungroup() %>% filter(n>1)
Q1_dup <- left_join(Q1_dup_fam, Q1_corr)
## export as csv
write_csv(Q1_corr, "../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv")
?separate
## Correct Pregnancy duration
Q1_corr <- Q1_corr %>% separate('m_PregnancyDurationW+D', into = c("weeksPreg", "DaysPreg"), sep="\\+",
remove=FALSE) %>%
replace_na(DaysPreg,0) %>%
mutate(m_PregnancyDurationD=(as.numeric(weeksPreg)*7)+as.numeric(DaysPreg)) %>%
select(-weeksPreg, -DaysPreg) %>%
relocate(m_PregnancyDurationD, .after = 'm_PregnancyDurationW+D')
?replace_na
## Correct Pregnancy duration
Q1_corr <- Q1_corr %>% separate('m_PregnancyDurationW+D', into = c("weeksPreg", "DaysPreg"), sep="\\+",
remove=FALSE) %>%
mutate(DaysPreg = replace_na(DaysPreg, 0)) %>%
mutate(m_PregnancyDurationD=(as.numeric(weeksPreg)*7)+as.numeric(DaysPreg)) %>%
select(-weeksPreg, -DaysPreg) %>%
relocate(m_PregnancyDurationD, .after = 'm_PregnancyDurationW+D')
## correct the Postal code
Q1_corr <- Q1_corr %>% mutate(env_PostalCode=str_pad(env_PostalCode, 5, pad = "0")) %>%
mutate(env_PrevResidencePostalCode=str_pad(env_PrevResidencePostalCode, 5, pad = "0"))
View(Q1_corr)
## check for duplicated submissions
Q1_dup_fam <- Q1_corr %>% select(familly_ID) %>% group_by(familly_ID) %>%
tally() %>% ungroup() %>% filter(n>1)
Q1_dup <- left_join(Q1_dup_fam, Q1_corr)
## export as csv
write_csv(Q1_corr, "../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv")
# libraries
library("readxl")
library("tidyverse")
library("ggridges")
# Load the spreadsheets
Voc <- read_excel("../questionnaire_vocabulary.xlsx")
Q1 <- read_csv("../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv") %>%
add_column(questionnaire="A_background")
Q2 <- read_csv("../normalized_versions/corrected_translated/Q2_norm_Previous3months_15.08.20.csv") %>%
add_column(questionnaire="E_Previous3Months")
Q3 <- read_csv("../normalized_versions/corrected_translated/Q3_norm_4to6months_26.01.20.csv") %>%
add_column(questionnaire="C_4to6months")
Q4 <- read_csv("../normalized_versions/corrected_translated/Q4_norm_7to12months_27.01.21.csv") %>%
add_column(questionnaire="D_7to12months")
Q5y1 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearI_28.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version2")
Q5y2 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version2")
Q5y1B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearI_27.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version1")
Q5y2B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version1")
Q6F <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsF_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentF_FoodFrequency")
Q6M <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsM_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentM_FoodFrequency")
Q7 <- read_csv("../normalized_versions/corrected_translated/Q7_norm_depression_unkown.csv") %>%
add_column(questionnaire="G_MotherDepression")
Q8 <- read_csv("../normalized_versions/corrected_translated/Q8_norm_HouseDustCollection_28.01.21.csv") %>%
add_column(questionnaire="H_HouseCollection")
Q9 <- read_csv("../normalized_versions/corrected_translated/Q9_norm_0to3 months_02.02.2020.csv") %>%
add_column(questionnaire="B_0to3months")
curr_Voc <- Voc %>% filter(Questionnaire=="A_background")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(variable_short_name != "env_PostalCode") %>%
filter(variable_short_name != "env_PrevResidencePostalCode") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q1 %>% select(all_of(int_fields))
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
# checking type of data
type_check <-  curr_int %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
shiny::runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
question <- read_csv("../normalized_versions/corrected_translated/per_familly_questionnaires.csv") %>%
pivot_longer(!familly_ID, names_to="measures", values_to="nb families")
View(question)
question <- read_csv("../normalized_versions/corrected_translated/per_familly_questionnaires.csv") %>%
pivot_longer(!familly_ID, names_to="questionnaire", values_to="nb_responses")
View(question)
View(question)
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
