#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer()
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
mutate(name="nb families") %>%
pivot_longer(names_to = name)
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(names_to="measures", values_to="nb families")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(everything(), names_to="measures", values_to="nb families")
View(table_out)
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(everything(), names_to="measures", values_to="nb families")
knitr::kable(table_out)
shiny::runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
question_wide <- read_csv("../normalized_versions/corrected_translated/per_familly_questionnaires.csv")
question_long <- question_wide %>%
pivot_longer(!familly_ID, names_to="questionnaire", values_to="nb_responses") %>%
mutate(questionnaire=ifelse(questionnaire=="F1_NutritionMotorDev_year1_Version2", "F1_NutritionMotorDev_year1",
ifelse(questionnaire=="F1_NutritionMotorDev_year1_Version1", "F1_NutritionMotorDev_year1",
ifelse(questionnaire=="F2_NutritionMotorDev_year2_Version2", "F2_NutritionMotorDev_year2",
ifelse(questionnaire=="F2_NutritionMotorDev_year2_Version1", "F2_NutritionMotorDev_year2", NA)))))
setwd("~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app")
question_wide <- read_csv("../normalized_versions/corrected_translated/per_familly_questionnaires.csv")
question_long <- question_wide %>%
pivot_longer(!familly_ID, names_to="questionnaire", values_to="nb_responses") %>%
mutate(questionnaire=ifelse(questionnaire=="F1_NutritionMotorDev_year1_Version2", "F1_NutritionMotorDev_year1",
ifelse(questionnaire=="F1_NutritionMotorDev_year1_Version1", "F1_NutritionMotorDev_year1",
ifelse(questionnaire=="F2_NutritionMotorDev_year2_Version2", "F2_NutritionMotorDev_year2",
ifelse(questionnaire=="F2_NutritionMotorDev_year2_Version1", "F2_NutritionMotorDev_year2", NA)))))
View(question_long)
question_wide <- read_csv("../normalized_versions/corrected_translated/per_familly_questionnaires.csv")
question_long <- question_wide %>%
pivot_longer(!familly_ID, names_to="questionnaire", values_to="nb_responses") %>%
mutate(questionnaire=ifelse(questionnaire=="F1_NutritionMotorDev_year1_Version2", "F1_NutritionMotorDev_year1",
ifelse(questionnaire=="F1_NutritionMotorDev_year1_Version1", "F1_NutritionMotorDev_year1",
ifelse(questionnaire=="F2_NutritionMotorDev_year2_Version2", "F2_NutritionMotorDev_year2",
ifelse(questionnaire=="F2_NutritionMotorDev_year2_Version1", "F2_NutritionMotorDev_year2", NA)))))
View(question_long)
question_wide <- read_csv("../normalized_versions/corrected_translated/per_familly_questionnaires.csv")
question_long <- question_wide %>%
pivot_longer(!familly_ID, names_to="questionnaire", values_to="nb_responses") %>%
mutate(questionnaire=ifelse(questionnaire=="F1_NutritionMotorDev_year1_Version2", "F1_NutritionMotorDev_year1",
ifelse(questionnaire=="F1_NutritionMotorDev_year1_Version1", "F1_NutritionMotorDev_year1",
ifelse(questionnaire=="F2_NutritionMotorDev_year2_Version2", "F2_NutritionMotorDev_year2",
ifelse(questionnaire=="F2_NutritionMotorDev_year2_Version1", "F2_NutritionMotorDev_year2", questionnaire)))))
View(question_long)
runApp()
runApp()
?row_number()
runApp()
runApp()
runApp()
View(question_long)
question_long %>% group_by(questionnaire) %>% tally()
View(question_wide)
setwd("~/Documents/Fin_Postdoc/projects/HELMi_curation/analysis")
# libraries
library("readxl")
library("tidyverse")
library("ggridges")
# Load the spreadsheets
Voc <- read_excel("../questionnaire_vocabulary.xlsx")
Q1 <- read_csv("../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv") %>%
add_column(questionnaire="A_background")
Q2 <- read_csv("../normalized_versions/corrected_translated/Q2_norm_Previous3months_15.08.20.csv") %>%
add_column(questionnaire="E_Previous3Months")
Q3 <- read_csv("../normalized_versions/corrected_translated/Q3_norm_4to6months_26.01.20.csv") %>%
add_column(questionnaire="C_4to6months")
Q4 <- read_csv("../normalized_versions/corrected_translated/Q4_norm_7to12months_27.01.21.csv") %>%
add_column(questionnaire="D_7to12months")
Q5y1 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearI_28.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version2")
Q5y2 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version2")
Q5y1B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearI_27.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version1")
Q5y2B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version1")
Q6F <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsF_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentF_FoodFrequency")
Q6M <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsM_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentM_FoodFrequency")
Q7 <- read_csv("../normalized_versions/corrected_translated/Q7_norm_depression_unkown.csv") %>%
add_column(questionnaire="G_MotherDepression")
Q8 <- read_csv("../normalized_versions/corrected_translated/Q8_norm_HouseDustCollection_28.01.21.csv") %>%
add_column(questionnaire="H_HouseCollection")
Q9 <- read_csv("../normalized_versions/corrected_translated/Q9_norm_0to3 months_02.02.2020.csv") %>%
add_column(questionnaire="B_0to3months")
#types counts
Types_count <- Voc %>% group_by(Questionnaire, data_type) %>% tally()
#Types_count$Questionnaire <- sort(as.factor(Types_count$Questionnaire), decreasing=TRUE)
plotTypes <- Types_count %>% ggplot(aes(x=Questionnaire, y=n, fill=data_type)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotTypes
# nb of famillies answers in each questionnaires
Q1_fam <- Q1 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q2_fam <- Q2 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q3_fam <- Q3 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q4_fam <- Q4 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q5y1_fam <- Q5y1 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q5y2_fam <- Q5y2 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q5y1B_fam <- Q5y1B %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q5y2B_fam <- Q5y2B %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q6F_fam <- Q6F %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q6M_fam <- Q6M %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q7_fam <- Q7 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q8_fam <- Q8 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q9_fam <- Q9 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
all_fam <- Q1_fam %>% add_row(Q2_fam) %>%
add_row(Q3_fam) %>%
add_row(Q4_fam) %>%
add_row(Q5y1_fam) %>%
add_row(Q5y2_fam) %>%
add_row(Q5y1B_fam) %>%
add_row(Q5y2B_fam) %>%
add_row(Q6F_fam) %>%
add_row(Q6M_fam) %>%
add_row(Q7_fam) %>%
add_row(Q8_fam) %>%
add_row(Q9_fam) %>% rename("nb_filled"="n")
nb_fam <- all_fam %>% select(questionnaire, familly_ID) %>% unique() %>%
group_by(questionnaire) %>% tally() %>% ungroup() %>% rename("nb of famillies"="n")
knitr::kable(nb_fam, caption = 'number of famillies answering the questionnaire at least once')
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "../normalized_versions/corrected_translated/per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(everything(), names_to="measures", values_to="nb families")
knitr::kable(table_out)
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotorDev_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotorDev_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1) %>%
select(-F1_NutritionMotorDev_year1_Version2, -F1_NutritionMotorDev_year1_Version1, - F2_NutritionMotorDev_year2_Version2, - F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotorDev_year1+F1_NutritionMotorDev_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "../normalized_versions/corrected_translated/per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(everything(), names_to="measures", values_to="nb families")
knitr::kable(table_out)
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotorDev_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotorDev_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1) %>%
select(-F1_NutritionMotorDev_year1_Version2, -F1_NutritionMotorDev_year1_Version1, - F2_NutritionMotorDev_year2_Version2, - F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotorDev_year1+F1_NutritionMotorDev_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "../normalized_versions/corrected_translated/per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(everything(), names_to="measures", values_to="nb families")
knitr::kable(table_out)
setwd("~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app")
runApp()
runApp()
setwd("~/Documents/Fin_Postdoc/projects/HELMi_curation/analysis")
# libraries
library("readxl")
library("tidyverse")
library("ggridges")
# Load the spreadsheets
Voc <- read_excel("../questionnaire_vocabulary.xlsx")
Q1 <- read_csv("../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv") %>%
add_column(questionnaire="A_background")
Q2 <- read_csv("../normalized_versions/corrected_translated/Q2_norm_Previous3months_15.08.20.csv") %>%
add_column(questionnaire="E_Previous3Months")
Q3 <- read_csv("../normalized_versions/corrected_translated/Q3_norm_4to6months_26.01.20.csv") %>%
add_column(questionnaire="C_4to6months")
Q4 <- read_csv("../normalized_versions/corrected_translated/Q4_norm_7to12months_27.01.21.csv") %>%
add_column(questionnaire="D_7to12months")
Q5y1 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearI_28.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version2")
Q5y2 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version2")
Q5y1B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearI_27.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version1")
Q5y2B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version1")
Q6F <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsF_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentF_FoodFrequency")
Q6M <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsM_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentM_FoodFrequency")
Q7 <- read_csv("../normalized_versions/corrected_translated/Q7_norm_depression_unkown.csv") %>%
add_column(questionnaire="G_MotherDepression")
Q8 <- read_csv("../normalized_versions/corrected_translated/Q8_norm_HouseDustCollection_28.01.21.csv") %>%
add_column(questionnaire="H_HouseCollection")
Q9 <- read_csv("../normalized_versions/corrected_translated/Q9_norm_0to3 months_02.02.2020.csv") %>%
add_column(questionnaire="B_0to3months")
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_year1_version1")
# Looking at boolean fields
bool_fields <- curr_Voc %>% filter(data_type=="bool") %>% pull(variable_short_name)
curr_bool <- Q1 %>% select(familly_ID, all_of(bool_fields))
curr_bool_long <- curr_bool %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
View(Voc)
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at boolean fields
bool_fields <- curr_Voc %>% filter(data_type=="bool") %>% pull(variable_short_name)
curr_bool <- Q1 %>% select(familly_ID, all_of(bool_fields))
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at boolean fields
bool_fields <- curr_Voc %>% filter(data_type=="bool") %>% pull(variable_short_name)
curr_bool <- Q5y1B %>% select(familly_ID, all_of(bool_fields))
curr_bool_long <- curr_bool %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_bool_counts <- curr_bool_long %>% group_by(question, answers) %>% tally()
plotbools <- curr_bool_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotbools
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q5y1b %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="m_PregnancyDurationW+D") %>%
pull(variable_short_name)
curr_cat <- Q5y1B %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="inf_PeriodFormula") %>%
pull(variable_short_name)
curr_cat <- Q5y1B %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y1B %>% select(all_of(int_fields))
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
View(curr_int)
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_Age") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y1B %>% select(all_of(int_fields))
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
View(curr_int)
curr_int
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_Age") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y1B %>% select(all_of(int_fields))
curr_int <- lapply(curr_int ,as.numeric)
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_Age") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y1B %>% select(all_of(int_fields)) %>%
mutate_if(is_all_numeric,as.numeric)
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version1")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_Age") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y1B %>% select(all_of(int_fields)) %>%
mutate_if(is.character,as.numeric)
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
# checking type of data
type_check <-  curr_int %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
question_wide <- read_csv("../normalized_versions/corrected_translated/per_familly_questionnaires.csv")
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
View(question_wide)
View(question_wide)
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
runApp('~/Documents/Fin_Postdoc/projects/HELMi_curation/HELMi_app')
